{"version":3,"file":"physicianController.js","names":["_catchAsync","require","physicians","id","name","specialty","getAllPhysicians","catchAsync","req","res","status","json","results","length","data","exports","getPhysicianById","physician","find","p","parseInt","params","message","createPhysician","newPhysician","body","push","updatePhysicianById","deletePhysicianById","physicianIndex","findIndex","splice","diagnoseDisease","diagnosis"],"sources":["../../../src/controllers/physicianController.js"],"sourcesContent":["import { catchAsync } from \"../utils/catchAsync\";\n\nlet physicians = [\n  {\n    id: 1,\n    name: \"John Doe\",\n    specialty: \"Cardiology\",\n  },\n  {\n    id: 2,\n    name: \"Jane Smith\",\n    specialty: \"Neurology\",\n  },\n];\n\nexport const getAllPhysicians = catchAsync(async (req, res) => {\n  res.status(200).json({\n    status: \"success\",\n    results: physicians.length,\n    data: {\n      physicians,\n    },\n  });\n});\n\nexport const getPhysicianById = catchAsync(async (req, res) => {\n  const physician = physicians.find((p) => p.id === parseInt(req.params.id));\n  if (!physician) {\n    return res.status(404).json({\n      status: \"fail\",\n      message: \"Physician not found\",\n    });\n  }\n\n  res.status(200).json({\n    status: \"success\",\n    data: {\n      physician,\n    },\n  });\n});\n\nexport const createPhysician = catchAsync(async (req, res) => {\n  const newPhysician = {\n    id: physicians.length + 1,\n    name: req.body.name,\n    specialty: req.body.specialty,\n  };\n  physicians.push(newPhysician);\n\n  res.status(201).json({\n    status: \"success\",\n    data: {\n      physician: newPhysician,\n    },\n  });\n});\n\nexport const updatePhysicianById = catchAsync(async (req, res) => {\n  const physician = physicians.find((p) => p.id === parseInt(req.params.id));\n  if (!physician) {\n    return res.status(404).json({\n      status: \"fail\",\n      message: \"Physician not found\",\n    });\n  }\n\n  physician.name = req.body.name || physician.name;\n  physician.specialty = req.body.specialty || physician.specialty;\n\n  res.status(200).json({\n    status: \"success\",\n    data: {\n      physician,\n    },\n  });\n});\n\nexport const deletePhysicianById = catchAsync(async (req, res) => {\n  const physicianIndex = physicians.findIndex(\n    (p) => p.id === parseInt(req.params.id)\n  );\n\n  if (physicianIndex === -1) {\n    return res.status(404).json({\n      status: \"fail\",\n      message: \"Physician not found\",\n    });\n  }\n\n  physicians.splice(physicianIndex, 1);\n\n  res.status(204).json({\n    status: \"success\",\n    data: null,\n  });\n});\n\nexport const diagnoseDisease = catchAsync(async (req, res) => {\n  // TODO: Implement function\n  const diagnosis = \"Common cold\";\n  res.status(200).json({\n    status: \"success\",\n    data: {\n      diagnosis,\n    },\n  });\n});\n"],"mappings":"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"}