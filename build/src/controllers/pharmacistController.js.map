{"version":3,"file":"pharmacistController.js","names":["_catchAsync","require","pharmacists","id","name","email","phone","address","qualifications","experience","getAllPharmacists","catchAsync","req","res","status","json","data","exports","getPharmacistById","pharmacist","find","p","parseInt","params","message","createPharmacist","newPharmacist","length","body","push","updatePharmacistById","deletePharmacistById","pharmacistIndex","findIndex","splice","prescribeMedicines","patientId","patient","patients","medicines","prescription","prescriptions","datePrescribed","Date"],"sources":["../../../src/controllers/pharmacistController.js"],"sourcesContent":["import { catchAsync } from \"../utils/catchAsync\";\n\nconst pharmacists = [\n  {\n    id: 1,\n    name: \"John Doe\",\n    email: \"johndoe@gmail.com\",\n    phone: \"1234567890\",\n    address: \"123 Main St, Anytown USA\",\n    qualifications: [\"B.Pharm\", \"M.Pharm\"],\n    experience: \"5 years\",\n  },\n  {\n    id: 2,\n    name: \"Jane Smith\",\n    email: \"janesmith@gmail.com\",\n    phone: \"0987654321\",\n    address: \"456 Oak St, Anytown USA\",\n    qualifications: [\"B.Pharm\"],\n    experience: \"2 years\",\n  },\n  {\n    id: 3,\n    name: \"Bob Johnson\",\n    email: \"bobjohnson@gmail.com\",\n    phone: \"5555555555\",\n    address: \"789 Elm St, Anytown USA\",\n    qualifications: [\"B.Pharm\", \"Pharm.D\"],\n    experience: \"10 years\",\n  },\n];\n\nexport const getAllPharmacists = catchAsync(async (req, res) => {\n  res.status(200).json({\n    status: \"success\",\n    data: {\n      pharmacists,\n    },\n  });\n});\n\nexport const getPharmacistById = catchAsync(async (req, res) => {\n  const pharmacist = pharmacists.find((p) => p.id === parseInt(req.params.id));\n\n  if (!pharmacist) {\n    return res.status(404).json({\n      status: \"fail\",\n      message: \"Pharmacist not found\",\n    });\n  }\n\n  res.status(200).json({\n    status: \"success\",\n    data: {\n      pharmacist,\n    },\n  });\n});\n\nexport const createPharmacist = catchAsync(async (req, res) => {\n  const newPharmacist = {\n    id: pharmacists.length + 1,\n    name: req.body.name,\n    email: req.body.email,\n    phone: req.body.phone,\n    address: req.body.address,\n    qualifications: req.body.qualifications,\n    experience: req.body.experience,\n  };\n\n  pharmacists.push(newPharmacist);\n\n  res.status(201).json({\n    status: \"success\",\n    data: {\n      pharmacist: newPharmacist,\n    },\n  });\n});\n\nexport const updatePharmacistById = catchAsync(async (req, res) => {\n  const pharmacist = pharmacists.find((p) => p.id === parseInt(req.params.id));\n\n  if (!pharmacist) {\n    return res.status(404).json({\n      status: \"fail\",\n      message: \"Pharmacist not found\",\n    });\n  }\n\n  pharmacist.name = req.body.name || pharmacist.name;\n  pharmacist.email = req.body.email || pharmacist.email;\n  pharmacist.phone = req.body.phone || pharmacist.phone;\n  pharmacist.address = req.body.address || pharmacist.address;\n  pharmacist.qualifications =\n    req.body.qualifications || pharmacist.qualifications;\n  pharmacist.experience = req.body.experience || pharmacist.experience;\n\n  res.status(200).json({\n    status: \"success\",\n    data: {\n      pharmacist,\n    },\n  });\n});\n\nexport const deletePharmacistById = catchAsync(async (req, res) => {\n  const pharmacistIndex = pharmacists.findIndex(\n    (p) => p.id === parseInt(req.params.id)\n  );\n\n  if (pharmacistIndex === -1) {\n    return res.status(404).json({\n      status: \"fail\",\n      message: \"Pharmacist not found\",\n    });\n  }\n\n  pharmacists.splice(pharmacistIndex, 1);\n\n  res.status(204).json({\n    status: \"success\",\n    data: null,\n  });\n});\nexport const prescribeMedicines = catchAsync(async (req, res) => {\n  const patientId = req.params.id;\n  const patient = patients.find((p) => p.id === parseInt(patientId));\n\n  if (!patient) {\n    return res.status(404).json({\n      status: \"fail\",\n      message: \"Patient not found\",\n    });\n  }\n\n  const { medicines } = req.body;\n\n  // Perform validation on the medicines before prescribing\n\n  const prescription = {\n    id: prescriptions.length + 1,\n    patientId,\n    medicines,\n    datePrescribed: new Date(),\n  };\n\n  prescriptions.push(prescription);\n\n  res.status(201).json({\n    status: \"success\",\n    data: {\n      prescription,\n    },\n  });\n});\n\n"],"mappings":"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"}